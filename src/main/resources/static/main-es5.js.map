{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.constants.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/table/table.component.ts","webpack:///src/app/components/table/table.component.html","webpack:///src/app/models/LiveModel.ts","webpack:///src/app/service/blic-service.service.ts","webpack:///src/app/service/live-service.service.ts","webpack:///src/app/service/table-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","BASE_URL","AppModule","declarations","imports","providers","bootstrap","FooterComponent","HeaderComponent","HomeComponent","liveService","live","getLiveData","subscribe","res","error","console","log","toString","refresh","setInterval","x","pom","str","Math","floor","TableComponent","service","blicservice","blicSize","currentPage","limit","iterator","iteratorList","Array","seeAllBool","getBlic","slider","getDistance","getMostCases","getNearSerbia","distance","getNews","blic","error1","getTop","mostCases","off","lim","text","length","slice","div","document","getElementById","i","push","Iterator","getNearSerbiaAll","Live","BlicServiceService","http","of","headers","get","providedIn","LiveServiceService","TableServiceService","baseUrl","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'CoronaTracker';\r\n}\r\n","<app-header></app-header>\r\n\r\n<div class=\"container\">\r\n  <app-home></app-home>\r\n  <app-table></app-table>\r\n</div>\r\n\r\n<app-footer></app-footer>\r\n\r\n","export const BASE_URL = ''\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport {TableComponent} from './components/table/table.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {NgbAlertModule, NgbPaginationModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    TableComponent,\r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    NgxPaginationModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div style=\"width: 100%; height: 3.5rem; background-color: #0006; border-top: 2px solid #000c \">\r\n  <p style=\"color: white; margin: 1rem\">Created by Petar Poznanovic</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","\r\n  <nav class=\"navbar navbar-light \" style=\"border-bottom: 2px solid #f006;\">\r\n    <a class=\"navbar-brand\" href=\"\">\r\n      <img src=\"http://iconbug.com/data/e0/256/faa4202c99a862b57d6ea949cff5cece.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\r\n      Corona Tracker <span style=\"font-size: 7px\">by Petar Poznanovic</span>\r\n    </a>\r\n  </nav>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {LiveServiceService} from '../../service/live-service.service';\r\nimport {Live} from '../../models/LiveModel';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  public live: Live = new Live()\r\n\r\n  private allCasesString: String;\r\n\r\n\r\n  constructor(private liveService: LiveServiceService) { }\r\n\r\n  refresh () {\r\n    this.liveService.getLiveData().subscribe(\r\n      res => {\r\n       // console.log(res)\r\n        this.live = res\r\n      },\r\n      error => {\r\n        console.log(error.toString())\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.refresh()\r\n    setInterval(() => {this.refresh()}, 5000)\r\n\r\n  }\r\n\r\n  putComma(x:number){\r\n    if( x > 1000) {\r\n      let pom = x/1000\r\n       let str = Math.floor(pom) + ','\r\n      pom = x%1000\r\n      if(pom < 10){\r\n        str += '00' + pom\r\n      }else if(pom < 100){\r\n        str += '0' + pom\r\n      }else{\r\n        str += pom\r\n      }\r\n      return str\r\n\r\n    }\r\n    return x\r\n  }\r\n\r\n}\r\n","\r\n    <h1 class=\"cases\" >Coronavirus Cases:</h1>\r\n    <h1 class=\"cases\" > {{putComma(live.allCases)}}</h1>\r\n    <hr>\r\n\r\n    <div class=\"card-deck\">\r\n      <div class=\"card border-secondary mb-3\" style=\"max-width: 50rem;\">\r\n        <div class=\"card-header\">ACTIVE CASES</div>\r\n        <div class=\"card-body text-secondary\">\r\n          <h5 class=\"card-title\">{{putComma(live.activeCases)}}</h5>\r\n          <p class=\"pom\">Currently Infected Patients</p>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-6\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title second\" style=\"color: #00f7\">{{putComma(live.mildCondition)}}<span class=\"perc\">({{live.mildPercent}}%)</span>  </h5>\r\n                  <p class=\"card-text\" style=\"text-align: center; font-size: 14px\">in Mild conditions</p>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title second\" style=\"color: #f009\">{{putComma(live.seriousCondition)}}<span class=\"perc\">({{live.seriousPercent}}%)</span>  </h5>\r\n                  <p class=\"card-text\" style=\"text-align: center; font-size: 14px\">Serious or Critical</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card border-secondary mb-3\" style=\"max-width: 50rem;\">\r\n        <div class=\"card-header\">CLOSED CASES</div>\r\n        <div class=\"card-body text-secondary\">\r\n          <h5 class=\"card-title\">{{live.closedCases}}</h5>\r\n          <p class=\"pom card-text\">Cases which had an outcome:</p>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-6\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title second\" style=\"color: #0f0a\">{{putComma(live.recovered)}}<span class=\"perc\">({{live.recoveredPercent}}%)</span>  </h5>\r\n                  <p class=\"card-text\" style=\"text-align: center; font-size: 14px\">in Recovered/Discharged</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title second\" style=\"color: #000\">{{putComma(live.deaths)}}<span class=\"perc\">({{live.deathPercent}}%)</span>  </h5>\r\n                  <p class=\"card-text\" style=\"text-align: center; font-size: 14px\">Deaths</p>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TableModel} from '../../models/TableModel';\r\nimport {TableServiceService} from '../../service/table-service.service';\r\nimport {BlicModel} from '../../models/BlicModel';\r\nimport {BlicServiceService} from '../../service/blic-service.service';\r\nimport {iterator} from 'rxjs/internal-compatibility';\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.css']\r\n})\r\nexport class TableComponent implements OnInit {\r\n\r\n  public blicSize = 21\r\n  public currentPage = 1\r\n  public limit = 3\r\n  public iterator = this.blicSize/this.limit\r\n  public iteratorList: Iterator[] = new Array()\r\n\r\n\r\n  public seeAllBool = false\r\n\r\n\r\n  public distance: TableModel[]\r\n  public mostCases: TableModel[]\r\n  public blic: BlicModel[]\r\n\r\n  constructor(private service: TableServiceService,\r\n              private blicservice: BlicServiceService) { }\r\n\r\n  ngOnInit() {\r\n    this.do()\r\n      this.refresh()\r\n    this.getBlic(this.currentPage,this.limit)\r\n\r\n    setInterval(() => {this.slider()}, 10000)\r\n\r\n  }\r\n\r\n  refresh() {\r\n    this.getDistance()\r\n    this.getMostCases()\r\n\r\n  }\r\n\r\n\r\n  getDistance(){\r\n    this.service.getNearSerbia().subscribe(\r\n      res => {\r\n        //console.log(res)\r\n        this.distance = res\r\n        this.seeAllBool = false\r\n        this.blicservice.getNews(1, this.limit).subscribe(\r\n          res => {\r\n            this.blic = res},\r\n          error1 => {\r\n            console.log(error1)\r\n          }\r\n        )\r\n      },\r\n      error => {\r\n        console.log(error.toString())\r\n      }\r\n    )\r\n  }\r\n\r\n  getMostCases() {\r\n    this.service.getTop().subscribe(\r\n      res => {\r\n        //console.log(res)\r\n        this.mostCases = res\r\n      },\r\n      error => {\r\n        console.log(error.toString())\r\n      }\r\n    )\r\n  }\r\n\r\n  getBlic(off, lim) {\r\n    this.blicservice.getNews(off, lim).subscribe(\r\n      res => {\r\n        //console.log(res)\r\n        this.blic = res\r\n      },\r\n      error => {\r\n        console.log(error.toString())\r\n      }\r\n    )\r\n  }\r\n\r\n  pom(x) {\r\n    if(x==0){\r\n      return ''\r\n    }\r\n    return x\r\n  }\r\n\r\n  formatText(text:String){\r\n    if(text.length > 300 ) {\r\n      return text.slice(0,300) + \"...\"\r\n    }\r\n    return text\r\n  }\r\n\r\n  decrease(){\r\n    const div = document.getElementById(this.currentPage+'')\r\n\r\n    if(this.currentPage > 1){\r\n      this.currentPage--;\r\n    }\r\n    this.getBlic(this.currentPage, this.limit)\r\n  }\r\n\r\n  increase(){\r\n    if(this.currentPage < 5){\r\n      this.currentPage++;\r\n    }\r\n    this.getBlic(this.currentPage, this.limit)\r\n  }\r\n\r\n  setPage(x:number){\r\n    this.currentPage = x\r\n    this.getBlic(this.currentPage, this.limit)\r\n}\r\n\r\n  do(){\r\n    for (let i = 0; i < this.iterator; i++) {\r\n      this.iteratorList.push(new Iterator(i))\r\n    }\r\n\r\n  }\r\n\r\n  slider(){\r\n    if(this.currentPage < 5){\r\n      this.currentPage++\r\n    }else{\r\n      this.currentPage = 1\r\n    }\r\n\r\n   this.getBlic(this.currentPage, this.limit)\r\n\r\n  }\r\n\r\n  seeAll(){\r\n\r\n    this.service.getNearSerbiaAll().subscribe(\r\n      res => {\r\n        //console.log(res)\r\n        this.distance = res\r\n        this.seeAllBool = true\r\n        this.blicservice.getNews(1,this.blicSize-1).subscribe(\r\n          res => {\r\n            this.blic = res},\r\n              error1 => {\r\n            console.log(error1)\r\n\r\n          }\r\n        )\r\n      },\r\n      error => {\r\n        console.log(error.toString())\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\nexport class Iterator {\r\n  iterator:number\r\n\r\n  constructor(iterator:number){\r\n    this.iterator = iterator\r\n  }\r\n\r\n}\r\n","<h3 style=\"margin-top: 20px\">Countries with most cases:</h3>\r\n<div class=\"table-div\" >\r\n  <div class=\"flex-table\" style=\"padding-right: 5px\">\r\n    <table class=\"table\">\r\n      <thead>\r\n      <tr>\r\n        <th scope=\"col\">State</th>\r\n        <th scope=\"col\">Country</th>\r\n        <th scope=\"col\">Cases</th>\r\n        <th scope=\"col\">Cases Today</th>\r\n        <th scope=\"col\">Deaths</th>\r\n        <th scope=\"col\">Deaths today</th>\r\n        <th scope=\"col\">Recovered</th>\r\n        <th scope=\"col\">Recovered Today</th>\r\n\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let country of mostCases\">\r\n          <td>{{country.state}}</td>\r\n          <td>{{country.country}}</td>\r\n          <td style=\"background-color: #f602\">{{pom(country.latestTotalCases)}}</td>\r\n          <td>{{pom(country.casesToday)}}</td>\r\n          <td style=\"background-color: #f002\">{{pom(country.latestTotalDeaths)}}</td>\r\n          <td>{{pom(country.recoveriesToday)}}</td>\r\n          <td style=\"background-color: #0f02\">{{pom(country.latestTotalRecovered)}}</td>\r\n          <td>{{pom(country.deathsToday)}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <a href=\"https://www.worldometers.info/coronavirus/#countries\" target=\"_blank\" class=\"btn\">See all</a>\r\n    <br><br>\r\n    <h3 style=\"margin-top: 20px\">Countries nearest to Serbia:</h3>\r\n    <table class=\"table\">\r\n      <thead>\r\n      <tr>\r\n        <th scope=\"col\">State</th>\r\n        <th scope=\"col\">Country</th>\r\n        <th scope=\"col\">Cases</th>\r\n        <th scope=\"col\">Cases Today</th>\r\n        <th scope=\"col\">Deaths</th>\r\n        <th scope=\"col\">Deaths today</th>\r\n        <th scope=\"col\">Recovered</th>\r\n        <th scope=\"col\">Recovered Today</th>\r\n\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let country of distance\">\r\n        <td>{{country.state}}</td>\r\n        <td>{{country.country}}</td>\r\n        <td style=\"background-color: #f602\">{{pom(country.latestTotalCases)}}</td>\r\n        <td>{{pom(country.casesToday)}}</td>\r\n        <td style=\"background-color: #f002\">{{pom(country.latestTotalDeaths)}}</td>\r\n        <td>{{pom(country.recoveriesToday)}}</td>\r\n        <td style=\"background-color: #0f02\">{{pom(country.latestTotalRecovered)}}</td>\r\n        <td>{{pom(country.deathsToday)}}</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n    <button *ngIf=\"!seeAllBool\"  (click)=\"seeAll()\" type=\"button\" class=\"btn\" >See more</button>\r\n    <button  *ngIf=\"seeAllBool\"  (click)=\"getDistance()\" type=\"button\" class=\"btn\" >Show Less</button>\r\n\r\n  </div>\r\n  <div style=\"height: 200vh; border-left: 1px solid #0002; width: 1px\"></div>\r\n  <div class=\"flex-news\" style=\"width: 100%; margin-left: 1rem;\">\r\n\r\n    <div style=\"background-color: #d01b20; width: 100%; color: white;height: 2.5rem\">\r\n      <a href=\"https://www.blic.rs/search?q=korona\" target=\"_blank\" style=\"width: 100%\">\r\n        <img class=\"blicimg\" src=\"https://studiob.rs/wp-content/uploads/2017/09/blic-logo.jpg\"  alt=\"\">\r\n        <span style=\"color: white; width: 74%; font-size: 1.8rem; float: right\">News from Serbia</span>\r\n      </a>\r\n    </div>\r\n    <br>\r\n\r\n    <div *ngIf=\"!seeAllBool\" style=\"width: 100%; margin-top: 1rem;margin-left: 1rem\">\r\n      <button (click)=\"decrease()\" type=\"button\" class=\"btn\" style=\"width: 35px; padding: auto; margin: 2px; float: left; background-color: #0005\"><</button>\r\n      <div style=\"float: left\" *ngFor=\"let itr of iteratorList\">\r\n        <button [className]=\"this.currentPage == itr.iterator+1 ? 'btn active' : 'btn'\" (click)=\"setPage(itr.iterator+1)\" id=\"{{ itr.iterator }}\" type=\"button\" class=\"btn\" style=\"width: 35px; padding: auto; margin: 2px\">{{itr.iterator + 1}}</button>\r\n      </div>\r\n      <button (click)=\"increase()\" type=\"button\" class=\"btn\" style=\"width: 35px; padding: auto; margin: 2px; background-color: #0005\" >></button>\r\n\r\n    </div>\r\n\r\n    <div class=\"card blic_card\"  *ngFor=\"let new of blic\" style=\"width: 100%; margin-left: 1rem; padding: 0;\">\r\n      <a href=\"{{new.link}}\" target=\"_blank\">\r\n        <img src=\"{{new.picture}}\" class=\"card-img-top\" alt=\"...\">\r\n        <div class=\"card-body\" style=\"height: 19rem\">\r\n          <h5 class=\"card-title blic head\">{{new.title}}</h5>\r\n          <p class=\"card-text link\">{{formatText(new.description)}}</p>\r\n          <p class=\"card-text\"><small class=\"text-muted\">{{new.date}}</small></p>\r\n        </div>\r\n      </a>\r\n\r\n    </div>\r\n    <div *ngIf=\"!seeAllBool\" style=\"width: 100%; margin-top: 1rem;margin-left: 1rem; margin-bottom: 2rem\">\r\n      <button (click)=\"decrease()\" type=\"button\" class=\"btn\" style=\"width: 35px; padding: auto; margin: 2px; float: left; background-color: #0005\"><</button>\r\n      <div style=\"float: left\" *ngFor=\"let itr of iteratorList\">\r\n        <button [className]=\"this.currentPage == itr.iterator+1 ? 'btn active' : 'btn'\" (click)=\"setPage(itr.iterator+1)\" id=\"{{itr.iterator}}\" type=\"button\" class=\"btn\" style=\"width: 35px; padding: auto; margin: 2px\">{{itr.iterator + 1}}</button>\r\n      </div>\r\n      <button (click)=\"increase()\" type=\"button\" class=\"btn\" style=\"width: 35px; padding: auto; margin: 2px; background-color: #0005\" >></button>\r\n\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n\r\n\r\n  <div>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n","export class Live{\r\n\r\n  public mildCondition:number\r\n  public seriousCondition:number\r\n\r\n  public recovered:number\r\n  public deaths:number\r\n\r\n  public allCases:number\r\n  public activeCases:number\r\n  public closedCases:number\r\n\r\n  public mildPercent:number\r\n  public seriousPercent:number\r\n  public recoveredPercent:number\r\n  public deathPercent:number\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {TableModel} from '../models/TableModel';\r\nimport {BASE_URL} from '../app.constants';\r\nimport {BlicModel} from '../models/BlicModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlicServiceService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getNews (of, lim) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'});\r\n\r\n\r\n    return this.http.get<BlicModel[]>(`${BASE_URL}blic/offset=${of}&limit=${lim}/`, {headers: headers})\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {BASE_URL} from '../app.constants';\r\nimport {Live} from '../models/LiveModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LiveServiceService {\r\n\r\n\r\n\r\n  constructor(private http:HttpClient,\r\n             ) {\r\n\r\n  }\r\n\r\n  getLiveData(){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'});\r\n\r\n\r\n    return this.http.get<Live>(`${BASE_URL}live/`, {headers: headers})\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Live} from '../models/LiveModel';\r\nimport {BASE_URL} from '../app.constants';\r\nimport { TableModel} from '../models/TableModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TableServiceService {\r\n\r\n  private baseUrl= 'https://corona-tracker-app-java.herokuapp.com/'\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n\r\n  getNearSerbia(){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'});\r\n\r\n\r\n    return this.http.get<TableModel[]>(`${BASE_URL}distance10/`, {headers: headers})\r\n  }\r\n\r\n  getNearSerbiaReverse(){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'});\r\n\r\n\r\n    return this.http.get<TableModel[]>(`${BASE_URL}distance/reverse/`, {headers: headers})\r\n  }\r\n\r\n  getNearSerbiaAll(){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'});\r\n\r\n\r\n    return this.http.get<TableModel[]>(`${BASE_URL}distance/`, {headers: headers})\r\n  }\r\n\r\n  getTopAll(){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'});\r\n\r\n\r\n    return this.http.get<TableModel[]>(`${BASE_URL}cases/`, {headers: headers})\r\n  }\r\n\r\n  getTop () {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'});\r\n\r\n\r\n    return this.http.get<TableModel[]>(`${BASE_URL}cases10/`, {headers: headers})\r\n  }\r\n\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}